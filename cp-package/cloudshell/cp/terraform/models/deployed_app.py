from cloudshell.cp.core.request_actions import (
    DeployedVMActions,
    GetVMDetailsRequestActions,
)
from cloudshell.cp.core.request_actions.models import DeployedApp

from cloudshell.cp.terraform import constants
from cloudshell.cp.terraform.models.base_deployment_app import \
    TerraformDeploymentAppAttributeNames, ResourceAttrRODeploymentPath, \
    \
    ResourcePasswordAttrRODeploymentPath, ResourceBoolAttrRODeploymentPath, \
    ResourceDictAttrRODeploymentPath, ResourceDictPasswordAttrRODeploymentPath


class BaseTFDeployedApp(DeployedApp):
    ATTR_NAMES = TerraformDeploymentAppAttributeNames
    DEPLOYMENT_PATH = constants.VM_FROM_TF_GIT
    # TODO: Verify why password based attributes are not working
    git_token: str = ResourcePasswordAttrRODeploymentPath(ATTR_NAMES.git_token)
    git_terraform_url: str = ResourceAttrRODeploymentPath(ATTR_NAMES.git_terraform_url)
    branch: str = ResourceAttrRODeploymentPath(ATTR_NAMES.branch)
    terraform_inputs: dict = ResourceDictAttrRODeploymentPath(
        ATTR_NAMES.terraform_inputs
    )
    terraform_sensitive_inputs: dict = \
        ResourceDictPasswordAttrRODeploymentPath(ATTR_NAMES.terraform_sensitive_inputs)
    cloud_provider: str = ResourceAttrRODeploymentPath(ATTR_NAMES.cloud_provider)
    autogenerated_name: str = ResourceBoolAttrRODeploymentPath(
        ATTR_NAMES.autogenerated_name)

    custom_tags: dict = ResourceDictAttrRODeploymentPath(
        ATTR_NAMES.custom_tags
    )


#
#     vm_cluster = ResourceAttrRODeploymentPath(ATTR_NAMES.vm_cluster)
#     vm_storage = ResourceAttrRODeploymentPath(ATTR_NAMES.vm_storage)
#     vm_resource_pool = ResourceAttrRODeploymentPath(ATTR_NAMES.vm_resource_pool)
#     vm_location = ResourceAttrRODeploymentPath(ATTR_NAMES.vm_location)
#     behavior_during_save = ResourceAttrRODeploymentPath(ATTR_NAMES.behavior_during_save)
#     auto_power_on = ResourceBoolAttrRODeploymentPath(ATTR_NAMES.auto_power_on)
#     auto_power_off = ResourceBoolAttrRODeploymentPath(ATTR_NAMES.auto_power_off)
#     wait_for_ip = ResourceBoolAttrRODeploymentPath(ATTR_NAMES.wait_for_ip)
#     auto_delete = ResourceBoolAttrRODeploymentPath(ATTR_NAMES.auto_delete)
#     autoload = ResourceBoolAttrRODeploymentPath(ATTR_NAMES.autoload)
#     ip_regex = ResourceAttrRODeploymentPath(ATTR_NAMES.ip_regex)
#     refresh_ip_timeout = ResourceIntAttrRODeploymentPath(ATTR_NAMES.refresh_ip_timeout)
#     customization_spec = ResourceAttrRODeploymentPath(ATTR_NAMES.customization_spec)
#     hostname = ResourceAttrRODeploymentPath(ATTR_NAMES.hostname)
#     private_ip = ResourceAttrRODeploymentPath(ATTR_NAMES.private_ip)
#     cpu_num = ResourceIntAttrRODeploymentPath(ATTR_NAMES.cpu_num)
#     ram_amount = ResourceFloatAttrRODeploymentPath(ATTR_NAMES.ram_amount)
#     hdd_specs = HddSpecsAttrRO(ATTR_NAMES.hdd_specs)
#     autogenerated_name = ResourceBoolAttrRODeploymentPath(ATTR_NAMES.autogenerated_name)
#     copy_source_uuid = ResourceBoolAttrRODeploymentPath(ATTR_NAMES.copy_source_uuid)
#
#
# class VMFromTemplateDeployedApp(BaseTFDeployedApp):
#     ATTR_NAMES = TFVMFromTemplateDeploymentAppAttributeNames
#
#     DEPLOYMENT_PATH = constants.VM_FROM_TEMPLATE_DEPLOYMENT_PATH
#     TF_template = ResourceAttrRODeploymentPath(ATTR_NAMES.TF_template)
#
#
# class VMFromImageDeployedApp(BaseTFDeployedApp):
#     ATTR_NAMES = TFVMFromImageDeploymentAppAttributeNames
#
#     DEPLOYMENT_PATH = constants.VM_FROM_IMAGE_DEPLOYMENT_PATH
#     TF_image = ResourceAttrRODeploymentPath(ATTR_NAMES.TF_image)
#     TF_image_arguments = ResourceListAttrRODeploymentPath(
#         ATTR_NAMES.TF_image_arguments
#     )
#
#
# class VMFromVMDeployedApp(BaseTFDeployedApp):
#     ATTR_NAMES = TFVMFromVMDeploymentAppAttributeNames
#
#     DEPLOYMENT_PATH = constants.VM_FROM_VM_DEPLOYMENT_PATH
#     TF_vm = ResourceAttrRODeploymentPath(ATTR_NAMES.TF_vm)
#
#
# class VMFromLinkedCloneDeployedApp(VMFromVMDeployedApp):
#     ATTR_NAMES = TFVMFromCloneDeployAppAttributeNames
#
#     DEPLOYMENT_PATH = constants.VM_FROM_LINKED_CLONE_DEPLOYMENT_PATH
#     TF_vm_snapshot = ResourceAttrRODeploymentPath(ATTR_NAMES.TF_vm_snapshot)
#
#
# class StaticTFDeployedApp(DeployedApp):
#     ATTR_NAMES = StaticTFDeploymentAppAttributeNames
#
#     DEPLOYMENT_PATH = constants.STATIC_SHELL_NAME
#     vm_name = ResourceAttrRODeploymentPath(ATTR_NAMES.vm_name)
#     TF_resource_name = ResourceAttrRODeploymentPath(
#         ATTR_NAMES.TF_resource_name
#     )


class TFGetVMDetailsRequestActions(GetVMDetailsRequestActions):
    deployed_app: BaseTFDeployedApp


class TFDeployedVMActions(DeployedVMActions):
    deployed_app: BaseTFDeployedApp
