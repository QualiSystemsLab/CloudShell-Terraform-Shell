tosca_definitions_version: tosca_simple_yaml_1_0

metadata:
  template_name: Generic Terraform Service
  template_author: Quali CS
  template_version: 1.0.0
  template_icon: shell-icon.png

description: >
  TOSCA based service shell
imports:
  - cloudshell_standard: cloudshell_custom_service_standard_1_0_0.yaml

node_types:
  vendor.resource.Generic Terraform Service:
    derived_from: cloudshell.nodes.CustomService
    properties:
      # can delete? or leave for data model backwards compatibility?
      Github Terraform Module URL:
        description: "Github url to the Terraform module. Supports the same URL format from a browser. The entire repo will be downloaded. Url to a folder: https://github.com/ACCOUNT/REPO/tree/BRANCH/PATH_TO_FOLDER or url to a TF file: https://github.com/ACCOUNT/REPO/blob/BRANCH/PATH/filename.tf"
        type: string
        tags: [ ]
      Git Terraform Module URL:
        description: "Git url to the Terraform module. Supports the same URL format from a browser. For Github, the entire repo will be downloaded. Url to a folder: https://github.com/ACCOUNT/REPO/tree/BRANCH/PATH_TO_FOLDER or url to a TF file: https://github.com/ACCOUNT/REPO/blob/BRANCH/PATH/filename.tf. Gitlab: 'http://<GITLAB_DOMAIN>/<USER>/<PROJECT_NAME>/-/tree/<BRANCH>/<FOLDER_PATH>'"
        type: string
        tags: [ user_input ]
      Terraform Version:
        description: The version of terraform needed (empty=latest). E.g. '1.0.0'
        type: string
        tags: [ user_input ]
      # can delete? or leave for data model backwards compatibility?
      Github Token:
        description: Github Token
        type: cloudshell.datatypes.Password
        tags: [ ]
      Git Token:
        description: Git Token
        type: cloudshell.datatypes.Password
        tags: [ user_input ]
      Git Provider:
        description: git provider (github / gitlab)
        type: string
        constraints:
          - valid_values: [github, gitlab]
        default: github
        tags: [ user_input ]
      Local Terraform:
        description: Path on Execution Server to terraform.exe
        type: string
        tags: [ user_input ]
      Cloud Provider:
        description: Cloud provider name to be used for cloud access
        type: string
        tags: [ user_input ]
      UUID:
        description: UUID for the driver instance. Used internally by the Terraform Shell, should not be a user input.
        type: string
        tags: [ ]
      Branch:
        description: Overrides the branch in the the Module URL.
        type: string
        tags: [ user_input ]
      Terraform Outputs:
        description: Non-sensitive outputs from Terraform apply. All unmapped outputs will be stored here.
        type: string
        tags: [ user_input ]
      Terraform Sensitive Outputs:
        description: Sensitive outputs from Terraform apply. All unmapped outputs will be stored here.
        type: cloudshell.datatypes.Password
        tags: [ user_input ]
      Terraform Inputs:
        description: Comma separated name=value list (e.g. varname1=varvalue1,varname2=varvalue2...)
        type: string
        tags: [ user_input ]
      Remote State Provider:
        description: Remote State provider resource name (only used if filled)
        type: string
        tags: [ user_input ]
      Custom Tags:
        description: Comma separated name=value list (e.g. varname1=varvalue1,varname2=varvalue2...)
        type: string
        tags: [ user_input ]
      Apply Tags:
        description: Should tags be applied? Yes=true, No=false (Default True)
        default: true
        type: boolean
        tags: [ user_input ]
      Service Categories:
        type: list
        default: [ Infra As Code ]

      # Terraform module variables mapping
      # attributes that end with "_tfvar" postfix will be mapped to Terraform variables automatically
#      MY_VAR_tfvar:
#        description:
#        type: string
#        tags: [ user_input ]

      # Terraform module outputs mapping
      # attributes that end with "_tfout" postfix will be mapped to Terraform outputs automatically
#      MY_OUTPUT_tfvar:
#        description:
#        type: string
#        tags: [ user_input ]
    artifacts:
      icon:
        file: shell-icon.png
        type: tosca.artifacts.File
      driver:
        file: GenericTerraformServiceDriver.zip
        type: tosca.artifacts.File